create table "public"."class_log" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "author_id" uuid default auth.uid(),
    "discipline_id" bigint,
    "students_participated" smallint default '0'::smallint
);


alter table "public"."class_log" enable row level security;

create table "public"."disciplines" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" character varying,
    "desription" text,
    "author_id" uuid default auth.uid()
);


alter table "public"."disciplines" enable row level security;

create table "public"."participants" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "class_log_id" bigint,
    "student_id" uuid
);


alter table "public"."participants" enable row level security;

CREATE UNIQUE INDEX class_log_pkey ON public.class_log USING btree (id);

CREATE UNIQUE INDEX disciplines_pkey ON public.disciplines USING btree (id);

CREATE UNIQUE INDEX participants_pkey ON public.participants USING btree (id);

alter table "public"."class_log" add constraint "class_log_pkey" PRIMARY KEY using index "class_log_pkey";

alter table "public"."disciplines" add constraint "disciplines_pkey" PRIMARY KEY using index "disciplines_pkey";

alter table "public"."participants" add constraint "participants_pkey" PRIMARY KEY using index "participants_pkey";

alter table "public"."class_log" add constraint "class_log_discipline_id_fkey" FOREIGN KEY (discipline_id) REFERENCES disciplines(id) ON DELETE CASCADE not valid;

alter table "public"."class_log" validate constraint "class_log_discipline_id_fkey";

alter table "public"."participants" add constraint "participants_class_log_id_fkey" FOREIGN KEY (class_log_id) REFERENCES class_log(id) ON DELETE CASCADE not valid;

alter table "public"."participants" validate constraint "participants_class_log_id_fkey";

alter table "public"."participants" add constraint "participants_student_id_fkey" FOREIGN KEY (student_id) REFERENCES auth.users(id) not valid;

alter table "public"."participants" validate constraint "participants_student_id_fkey";

grant delete on table "public"."class_log" to "anon";

grant insert on table "public"."class_log" to "anon";

grant references on table "public"."class_log" to "anon";

grant select on table "public"."class_log" to "anon";

grant trigger on table "public"."class_log" to "anon";

grant truncate on table "public"."class_log" to "anon";

grant update on table "public"."class_log" to "anon";

grant delete on table "public"."class_log" to "authenticated";

grant insert on table "public"."class_log" to "authenticated";

grant references on table "public"."class_log" to "authenticated";

grant select on table "public"."class_log" to "authenticated";

grant trigger on table "public"."class_log" to "authenticated";

grant truncate on table "public"."class_log" to "authenticated";

grant update on table "public"."class_log" to "authenticated";

grant delete on table "public"."class_log" to "service_role";

grant insert on table "public"."class_log" to "service_role";

grant references on table "public"."class_log" to "service_role";

grant select on table "public"."class_log" to "service_role";

grant trigger on table "public"."class_log" to "service_role";

grant truncate on table "public"."class_log" to "service_role";

grant update on table "public"."class_log" to "service_role";

grant delete on table "public"."disciplines" to "anon";

grant insert on table "public"."disciplines" to "anon";

grant references on table "public"."disciplines" to "anon";

grant select on table "public"."disciplines" to "anon";

grant trigger on table "public"."disciplines" to "anon";

grant truncate on table "public"."disciplines" to "anon";

grant update on table "public"."disciplines" to "anon";

grant delete on table "public"."disciplines" to "authenticated";

grant insert on table "public"."disciplines" to "authenticated";

grant references on table "public"."disciplines" to "authenticated";

grant select on table "public"."disciplines" to "authenticated";

grant trigger on table "public"."disciplines" to "authenticated";

grant truncate on table "public"."disciplines" to "authenticated";

grant update on table "public"."disciplines" to "authenticated";

grant delete on table "public"."disciplines" to "service_role";

grant insert on table "public"."disciplines" to "service_role";

grant references on table "public"."disciplines" to "service_role";

grant select on table "public"."disciplines" to "service_role";

grant trigger on table "public"."disciplines" to "service_role";

grant truncate on table "public"."disciplines" to "service_role";

grant update on table "public"."disciplines" to "service_role";

grant delete on table "public"."participants" to "anon";

grant insert on table "public"."participants" to "anon";

grant references on table "public"."participants" to "anon";

grant select on table "public"."participants" to "anon";

grant trigger on table "public"."participants" to "anon";

grant truncate on table "public"."participants" to "anon";

grant update on table "public"."participants" to "anon";

grant delete on table "public"."participants" to "authenticated";

grant insert on table "public"."participants" to "authenticated";

grant references on table "public"."participants" to "authenticated";

grant select on table "public"."participants" to "authenticated";

grant trigger on table "public"."participants" to "authenticated";

grant truncate on table "public"."participants" to "authenticated";

grant update on table "public"."participants" to "authenticated";

grant delete on table "public"."participants" to "service_role";

grant insert on table "public"."participants" to "service_role";

grant references on table "public"."participants" to "service_role";

grant select on table "public"."participants" to "service_role";

grant trigger on table "public"."participants" to "service_role";

grant truncate on table "public"."participants" to "service_role";

grant update on table "public"."participants" to "service_role";

create policy "class_log_policy_all"
on "public"."class_log"
as permissive
for all
to public
using (true);


create policy "Policy with security definer functions"
on "public"."disciplines"
as permissive
for all
to public
using (true);


create policy "participants_all"
on "public"."participants"
as permissive
for all
to public
using (true);



